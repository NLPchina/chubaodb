on:
  release:
    types: [created]

name: release

jobs:
  build:
    name: Upload Release Asset
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
    steps:

      - name: Checkout code
        uses: actions/checkout@v2

      - name: MacOs before install
        if: matrix.os == 'macOS-latest'
        run: rustup component add rustfmt --toolchain stable-x86_64-apple-darwin

      - name: Windows before install
        if: matrix.os == 'windows-latest'
        run: |
          curl -fsSL -o LLVM9.exe https://releases.llvm.org/9.0.0/LLVM-9.0.0-win64.exe
          7z x LLVM9.exe -y -o"C:/Program Files/LLVM"

      - name: Build project
        run: |
          cargo build --release

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset For Mac
        if: matrix.os == 'macOS-latest'
        id: upload-release-asset-mac
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./target/release/chubaodb
          asset_name: chubaodb_mac
          asset_content_type: application/zip

      - name: Upload Release Asset For Linux
        if: matrix.os == 'ubuntu-latest'
        id: upload-release-asset-linux
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./target/release/chubaodb
          asset_name: chubaodb_linux
          asset_content_type: application/zip

      - name: Upload Release Asset For Windows
        if: matrix.os == 'windows-latest'
        id: upload-release-asset-windows
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./target/release/chubaodb.exe
          asset_name: chubaodb.exe
          asset_content_type: application/zip
